spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    username: sa
    password: sa
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  data:
    redis:
      host: localhost
      port: 6379
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: test-client-id
            client-secret: test-client-secret
          facebook:
            client-id: test-client-id
            client-secret: test-client-secret

server:
  port: 8080
  compression:
    enabled: true
    min-response-size: 1024

# Mock API keys for testing
api-keys:
  brevo: test-api-key
  pexels: test-api-key
  translate: test-api-key
  google-client-id: test-client-id
  google-client-secret: test-client-secret
  facebook-client-id: test-client-id
  facebook-client-secret: test-client-secret
  jwt-access: test-jwt-key
  jwt-refresh: test-jwt-key
  jwt-access-duration: 7200
  jwt-refresh-duration: 604800
  db-url: jdbc:h2:mem:testdb
  db-username: sa
  db-password: sa
  redis-host: localhost
  redis-port: 6379
  redis-password: 
  sender-email: test@example.com
  sender-name: Test Sender
  firebase-bucket-name: test-bucket

app:
  email-client:
    brevo-url: https://test-api.example.com
    brevo-apikey: test-api-key
    sender:
      email: test@example.com
      name: Test Sender
  dictionary-client:
    url: https://test-api.example.com
  pexels-client:
    url: https://test-api.example.com
    apikey: test-api-key
  translate-client:
    url: https://test-api.example.com
    apikey: test-api-key
  firebase:
    bucket-name: test-bucket

client:
  url: http://localhost:3000
  reset-password-path: /reset-password
  verify-email-path: /verify-email