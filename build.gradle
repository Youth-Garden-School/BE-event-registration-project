plugins {
    id 'java'                                   // Support for Java projects
    id 'org.springframework.boot' version '3.2.5'  // Spring Boot plugin for application development
    id 'io.spring.dependency-management' version '1.1.7'  // Dependency version management
    id 'jacoco'                                 // Code coverage reporting
    id 'com.diffplug.spotless' version '6.25.0' // Code formatting and style enforcement
}

group = 'com.event-registration'                // Project group identifier
version = '0.0.1-SNAPSHOT'                      // Project version

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)  // Specify Java version
    }
}

ext {
    // Define versions for external libraries
    mapstructVersion = '1.6.3'
    lombokVersion = '1.18.34'
    lombokMapstructBindingVersion = '0.2.0'
    testContainersVersion = '1.20.2'
    uuidv7Generate = '5.1.0'
    openAPIVersion = '2.6.0'
    dotEnvVersion = '3.0.2'
    openFeignVersion = '4.0.4'
    springCloudVersion = '2023.0.0'
    icsVersion = '3.2.10'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor         // Configuration for annotation processors
    }
}

repositories {
    mavenCentral()                              // Central repository for dependency resolution
}

// Add this to your dependencies section if not already present
dependencies {
    // Spring Boot Starters for core functionality
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation "com.fasterxml.uuid:java-uuid-generator:${uuidv7Generate}"
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'

    implementation "org.mnode.ical4j:ical4j:${icsVersion}"

    // Database drivers for persistence
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'com.h2database:h2'

    


    // Redis client (tùy chọn, nếu cần cấu hình nâng cao)
    implementation 'redis.clients:jedis'

    // Lombok for reducing boilerplate code
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // MapStruct for entity-DTO mapping
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Environment
    implementation "io.github.cdimascio:dotenv-java:${dotEnvVersion}"

    // OpenAPI/Swagger for API documentation
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openAPIVersion}"

    // Test dependencies for unit and integration testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation "org.testcontainers:junit-jupiter:${testContainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    // OpenFeign
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${openFeignVersion}"
    // Add this to your dependencies section if not already present
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

// Add Spring Cloud dependency management if not already present
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// Test task configuration
tasks.named('test') {
    useJUnitPlatform()                          // Enable JUnit Platform
    finalizedBy jacocoTestReport                // Run coverage report after tests
}

// JaCoCo configuration for code coverage
jacoco {
    toolVersion = '0.8.12'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/event-registration/dto/**',
                    'com/event-registration/entity/**',
                    'com/event-registration/mapper/**',
                    'com/event-registration/config/**'
            ])
        }))
    }
}



spotless {
    java {
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
        indentWithTabs(4)
        palantirJavaFormat()
        importOrder('java', 'jakarta', 'org', 'com', '')
    }
}

tasks.named('build') {
    dependsOn spotlessApply
}

// Flyway configuration removed